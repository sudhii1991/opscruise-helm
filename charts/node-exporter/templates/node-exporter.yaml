apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    addonmanager.kubernetes.io/mode: {{ .Values.labels.addonmanagerKubernetesIoMode }}
    k8s-app: {{ .Values.labels.k8sapp }}
    kubernetes.io/cluster-service: "{{ .Values.labels.kubernetesIoClusterService }}"
    version: {{ .Values.labels.version }}
spec:
  selector:
    matchLabels:
      k8s-app: {{ .Values.labels.k8sapp }}
      version: {{ .Values.labels.version }}
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
  template:
    metadata:
      labels:
        k8s-app: {{ .Values.labels.k8sapp }}
        opscruiseGroup: {{ .Values.labels.opscruiseGroup }}
        opscruisePerimeter: {{ .Values.labels.opscruisePerimeter }}
        opscruiseProduct: {{ .Values.labels.opscruiseProduct }}
        opscruiseStream: {{ .Values.labels.opscruiseStream }}
        version: {{ .Values.labels.version }}
    spec:
      containers:
        -
          args:
            - "{{ .Values.args.procFS }}"
            - "{{ .Values.args.sysFS }}"
            - "{{ .Values.args.webMaxRequests }}"
            - "{{ .Values.args.webListenAddress }}"
            - "{{ .Values.args.reversePathPacket }}"
            - "{{ .Values.args.enableAllMetrics }}"
            - "{{ .Values.args.interface }} {{ .Values.interface }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          name: {{ .Values.name }}
          ports:
            -
              containerPort: {{ .Values.ports.containerPort }}
              hostPort: {{ .Values.ports.hostPort }}
              name: {{ .Values.ports.name }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          securityContext:
            capabilities:
              add:
                - {{ .Values.securityContext.addNETADMIN }}
                - {{ .Values.securityContext.addSYSADMIN }}
            privileged: {{ .Values.securityContext.privileged }}
          volumeMounts:
            -
              mountPath: {{ .Values.volumeMounts.devmountPath }}
              name: dev
            -
              mountPath: {{ .Values.volumeMounts.procmountPath }}
              name: proc
            -
              mountPath: {{ .Values.volumeMounts.sysmountPath }}
              name: sys
            -
              mountPath: {{ .Values.volumeMounts.rootfsmountPath }}
              name: rootfs
            -
              mountPath: {{ .Values.volumeMounts.libModulesPath }}
              name: lib-modules
            -
              mountPath: {{ .Values.volumeMounts.bootPath }}
              name: boot
            -
              mountPath: {{ .Values.volumeMounts.srcPath }}
              name: src
            -
              mountPath: {{ .Values.volumeMounts.bpfPath }}
              name: bpf
      hostNetwork: {{ .Values.hostNetwork }}
      hostPID: {{ .Values.hostPID }}
      imagePullSecrets:
        -
          name: {{ .Values.imagePullSecrets.name }}
      tolerations:
        -
          effect: {{ .Values.tolerations.effect }}
          key: {{ .Values.tolerations.key }}
      volumes:
        -
          hostPath:
            path: {{ .Values.volumes.procpath }}
          name: proc
        -
          hostPath:
            path: {{ .Values.volumes.devpath }}
          name: dev
        -
          hostPath:
            path: {{ .Values.volumes.syspath }}
          name: sys
        -
          hostPath:
            path: {{ .Values.volumes.rootfspath }}
          name: rootfs
        -
          hostPath:
            path: {{ .Values.volumes.libmodulespath }}
          name: lib-modules
        -
          hostPath:
            path: {{ .Values.volumes.bootpath }}
          name: boot
        -
          hostPath:
            path: {{ .Values.volumes.srcpath }}
          name: src
        -
          hostPath:
            path: {{ .Values.volumes.bpfpath }}
          name: bpf